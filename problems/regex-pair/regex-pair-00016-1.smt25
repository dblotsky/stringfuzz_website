(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.* (re.union (str.to.re "000") (str.to.re "1"))) (re.++ (re.+ (re.+ (str.to.re "222"))) (re.++ (re.* (re.+ (str.to.re "333"))) (re.++ (re.union (re.+ (str.to.re "44")) (re.+ (str.to.re "555"))) (re.++ (re.union (re.* (str.to.re "6")) (re.* (str.to.re "77"))) (re.++ (re.union (re.* (str.to.re "8")) (re.* (str.to.re "99"))) (re.++ (re.union (re.* (str.to.re "aa")) (re.* (str.to.re "b"))) (re.++ (re.* (re.union (str.to.re "ccc") (str.to.re "dd"))) (re.++ (re.* (re.+ (str.to.re "ee"))) (re.++ (re.+ (re.union (str.to.re "ff") (str.to.re "ggg"))) (re.++ (re.union (re.* (str.to.re "hh")) (re.* (str.to.re "iii"))) (re.++ (re.* (re.union (str.to.re "jj") (str.to.re "kk"))) (re.++ (re.* (re.union (str.to.re "l") (str.to.re "mm"))) (re.++ (re.+ (re.union (str.to.re "n") (str.to.re "o"))) (re.++ (re.+ (re.+ (str.to.re "pp"))) (re.+ (re.+ (str.to.re "qqq"))))))))))))))))))))
(assert (not (str.in.re var0 (re.++ (re.* (re.+ (str.to.re "0"))) (re.++ (re.+ (re.union (str.to.re "11") (str.to.re "2"))) (re.++ (re.+ (re.* (str.to.re "333"))) (re.++ (re.* (re.* (str.to.re "44"))) (re.++ (re.union (re.* (str.to.re "555")) (re.* (str.to.re "6"))) (re.++ (re.+ (re.+ (str.to.re "77"))) (re.++ (re.union (re.+ (str.to.re "8")) (re.+ (str.to.re "9"))) (re.++ (re.* (re.* (str.to.re "aa"))) (re.++ (re.union (re.union (str.to.re "bb") (str.to.re "cc")) (re.union (str.to.re "dd") (str.to.re "eee"))) (re.++ (re.union (re.* (str.to.re "ff")) (re.* (str.to.re "g"))) (re.++ (re.union (re.* (str.to.re "hh")) (re.* (str.to.re "i"))) (re.++ (re.union (re.* (str.to.re "jjj")) (re.* (str.to.re "k"))) (re.++ (re.* (re.union (str.to.re "lll") (str.to.re "mm"))) (re.++ (re.+ (re.union (str.to.re "n") (str.to.re "ooo"))) (re.++ (re.+ (re.* (str.to.re "pp"))) (re.* (re.* (str.to.re "qqq")))))))))))))))))))))
(check-sat)