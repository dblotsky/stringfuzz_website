(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.* (re.+ (str.to.re "0"))) (re.++ (re.+ (re.union (str.to.re "111") (str.to.re "222"))) (re.++ (re.+ (re.+ (str.to.re "33"))) (re.++ (re.* (re.union (str.to.re "4") (str.to.re "5"))) (re.++ (re.+ (re.* (str.to.re "666"))) (re.++ (re.* (re.* (str.to.re "77"))) (re.++ (re.+ (re.union (str.to.re "8") (str.to.re "9"))) (re.++ (re.union (re.+ (str.to.re "aa")) (re.+ (str.to.re "bb"))) (re.++ (re.union (re.union (str.to.re "cc") (str.to.re "d")) (re.union (str.to.re "eee") (str.to.re "fff"))) (re.++ (re.+ (re.+ (str.to.re "gg"))) (re.++ (re.union (re.union (str.to.re "hh") (str.to.re "ii")) (re.union (str.to.re "jjj") (str.to.re "kkk"))) (re.++ (re.+ (re.+ (str.to.re "lll"))) (re.++ (re.* (re.* (str.to.re "m"))) (re.++ (re.* (re.+ (str.to.re "n"))) (re.++ (re.+ (re.+ (str.to.re "oo"))) (re.* (re.* (str.to.re "ppp"))))))))))))))))))))
(assert (not (str.in.re var0 (re.++ (re.* (re.* (str.to.re "0"))) (re.++ (re.* (re.+ (str.to.re "111"))) (re.++ (re.* (re.+ (str.to.re "2"))) (re.++ (re.* (re.* (str.to.re "333"))) (re.++ (re.+ (re.+ (str.to.re "444"))) (re.++ (re.* (re.* (str.to.re "55"))) (re.++ (re.union (re.* (str.to.re "66")) (re.* (str.to.re "777"))) (re.++ (re.* (re.union (str.to.re "888") (str.to.re "999"))) (re.++ (re.union (re.* (str.to.re "aa")) (re.* (str.to.re "bbb"))) (re.++ (re.* (re.* (str.to.re "cc"))) (re.++ (re.union (re.union (str.to.re "dd") (str.to.re "eee")) (re.union (str.to.re "ff") (str.to.re "gg"))) (re.++ (re.+ (re.+ (str.to.re "h"))) (re.++ (re.union (re.union (str.to.re "i") (str.to.re "j")) (re.union (str.to.re "kkk") (str.to.re "lll"))) (re.++ (re.+ (re.union (str.to.re "mmm") (str.to.re "nn"))) (re.++ (re.union (re.+ (str.to.re "ooo")) (re.+ (str.to.re "p"))) (re.union (re.* (str.to.re "q")) (re.* (str.to.re "rrr")))))))))))))))))))))
(check-sat)