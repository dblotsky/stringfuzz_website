(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.union (re.union (re.* (re.union (re.union (re.+ (re.union (str.to.re "00") (str.to.re "1"))) (re.+ (re.* (str.to.re "22")))) (re.union (re.* (re.* (str.to.re "3"))) (re.* (re.* (str.to.re "444")))))) (re.* (re.+ (re.* (re.union (re.+ (str.to.re "55")) (re.+ (str.to.re "66"))))))) (re.union (re.+ (re.* (re.* (re.* (re.union (str.to.re "777") (str.to.re "8")))))) (re.+ (re.* (re.union (re.union (re.union (str.to.re "99") (str.to.re "aa")) (re.union (str.to.re "bbb") (str.to.re "ccc"))) (re.union (re.+ (str.to.re "dd")) (re.+ (str.to.re "e")))))))) (re.union (re.union (re.+ (re.* (re.union (re.* (re.union (str.to.re "ff") (str.to.re "g"))) (re.* (re.union (str.to.re "hh") (str.to.re "ii")))))) (re.+ (re.+ (re.+ (re.union (re.+ (str.to.re "jjj")) (re.+ (str.to.re "k"))))))) (re.union (re.union (re.+ (re.+ (re.* (re.+ (str.to.re "lll"))))) (re.+ (re.union (re.* (re.+ (str.to.re "m"))) (re.* (re.* (str.to.re "nnn")))))) (re.union (re.* (re.* (re.union (re.* (str.to.re "o")) (re.* (str.to.re "p"))))) (re.* (re.* (re.* (re.union (str.to.re "qq") (str.to.re "rrr")))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)