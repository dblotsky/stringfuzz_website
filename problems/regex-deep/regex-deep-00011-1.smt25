(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.union (re.+ (re.+ (re.union (re.union (re.+ (re.* (re.union (re.+ (re.union (re.union (str.to.re "000") (str.to.re "111")) (re.union (str.to.re "22") (str.to.re "3")))) (re.+ (re.union (re.* (str.to.re "4")) (re.* (str.to.re "55"))))))) (re.+ (re.* (re.+ (re.* (re.* (re.+ (str.to.re "66")))))))) (re.union (re.+ (re.union (re.union (re.+ (re.union (re.* (str.to.re "77")) (re.* (str.to.re "88")))) (re.+ (re.* (re.union (str.to.re "999") (str.to.re "aa"))))) (re.union (re.union (re.union (re.union (str.to.re "b") (str.to.re "cc")) (re.union (str.to.re "ddd") (str.to.re "ee"))) (re.union (re.+ (str.to.re "f")) (re.+ (str.to.re "g")))) (re.union (re.union (re.+ (str.to.re "hhh")) (re.+ (str.to.re "iii"))) (re.union (re.* (str.to.re "j")) (re.* (str.to.re "kkk"))))))) (re.+ (re.union (re.+ (re.* (re.union (re.union (str.to.re "lll") (str.to.re "mmm")) (re.union (str.to.re "nnn") (str.to.re "ooo"))))) (re.+ (re.union (re.union (re.* (str.to.re "p")) (re.* (str.to.re "q"))) (re.union (re.union (str.to.re "rr") (str.to.re "s")) (re.union (str.to.re "tt") (str.to.re "uu"))))))))))) (re.+ (re.* (re.+ (re.* (re.+ (re.* (re.union (re.union (re.+ (re.+ (str.to.re "vv"))) (re.+ (re.+ (str.to.re "www")))) (re.union (re.union (re.union (str.to.re "x") (str.to.re "y")) (re.union (str.to.re "z") (str.to.re "A"))) (re.union (re.* (str.to.re "BB")) (re.* (str.to.re "CC")))))))))))) (re.+ (re.union (re.union (re.+ (re.* (re.+ (re.* (re.* (re.* (re.+ (re.+ (str.to.re "DDD"))))))))) (re.+ (re.union (re.* (re.* (re.* (re.+ (re.union (re.* (str.to.re "EE")) (re.* (str.to.re "F"))))))) (re.* (re.* (re.union (re.* (re.+ (re.* (str.to.re "G")))) (re.* (re.+ (re.+ (str.to.re "HHH")))))))))) (re.union (re.union (re.+ (re.union (re.* (re.+ (re.union (re.* (re.* (str.to.re "III"))) (re.* (re.+ (str.to.re "JJ")))))) (re.* (re.union (re.union (re.union (re.union (str.to.re "K") (str.to.re "L")) (re.union (str.to.re "MMM") (str.to.re "N"))) (re.union (re.+ (str.to.re "OO")) (re.+ (str.to.re "P")))) (re.union (re.* (re.union (str.to.re "QQ") (str.to.re "RR"))) (re.* (re.union (str.to.re "SS") (str.to.re "T")))))))) (re.+ (re.union (re.union (re.union (re.+ (re.+ (re.+ (str.to.re "UU")))) (re.+ (re.+ (re.union (str.to.re "VVV") (str.to.re "W"))))) (re.union (re.* (re.union (re.+ (str.to.re "X")) (re.+ (str.to.re "Y")))) (re.* (re.union (re.union (str.to.re "ZZ") (str.to.re "!!")) (re.union (str.to.re """") (str.to.re "#")))))) (re.union (re.* (re.+ (re.+ (re.union (str.to.re "$$") (str.to.re "%%"))))) (re.* (re.+ (re.* (re.+ (str.to.re "&&&"))))))))) (re.union (re.+ (re.+ (re.union (re.union (re.+ (re.* (re.* (str.to.re "'")))) (re.+ (re.* (re.* (str.to.re "((("))))) (re.union (re.union (re.* (re.+ (str.to.re ")))"))) (re.* (re.* (str.to.re "***")))) (re.union (re.* (re.* (str.to.re "+"))) (re.* (re.+ (str.to.re ",,,")))))))) (re.+ (re.+ (re.* (re.union (re.+ (re.+ (re.+ (str.to.re "--")))) (re.+ (re.+ (re.* (str.to.re "..")))))))))))))))
(assert (<= 15 (str.len var0)))
(check-sat)