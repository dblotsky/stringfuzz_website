(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.* (re.+ (str.to.re "000"))) (re.++ (re.+ (re.+ (str.to.re "111"))) (re.++ (re.+ (re.+ (str.to.re "22"))) (re.++ (re.+ (re.* (str.to.re "333"))) (re.++ (re.+ (re.+ (str.to.re "44"))) (re.++ (re.* (re.* (str.to.re "555"))) (re.++ (re.* (re.* (str.to.re "666"))) (re.++ (re.union (re.+ (str.to.re "7")) (re.+ (str.to.re "888"))) (re.++ (re.union (re.union (str.to.re "9") (str.to.re "a")) (re.union (str.to.re "bb") (str.to.re "cc"))) (re.++ (re.+ (re.union (str.to.re "ddd") (str.to.re "eee"))) (re.++ (re.union (re.union (str.to.re "ff") (str.to.re "ggg")) (re.union (str.to.re "hh") (str.to.re "ii"))) (re.++ (re.+ (re.* (str.to.re "j"))) (re.++ (re.+ (re.* (str.to.re "k"))) (re.++ (re.+ (re.+ (str.to.re "ll"))) (re.++ (re.+ (re.* (str.to.re "mm"))) (re.++ (re.+ (re.* (str.to.re "nnn"))) (re.++ (re.* (re.+ (str.to.re "o"))) (re.++ (re.* (re.+ (str.to.re "ppp"))) (re.++ (re.+ (re.* (str.to.re "q"))) (re.++ (re.+ (re.+ (str.to.re "rrr"))) (re.++ (re.* (re.* (str.to.re "sss"))) (re.++ (re.union (re.union (str.to.re "tt") (str.to.re "uu")) (re.union (str.to.re "vv") (str.to.re "ww"))) (re.++ (re.union (re.union (str.to.re "xxx") (str.to.re "yyy")) (re.union (str.to.re "z") (str.to.re "A"))) (re.++ (re.* (re.union (str.to.re "BBB") (str.to.re "CCC"))) (re.++ (re.+ (re.union (str.to.re "D") (str.to.re "EEE"))) (re.++ (re.union (re.* (str.to.re "FF")) (re.* (str.to.re "G"))) (re.++ (re.* (re.union (str.to.re "HH") (str.to.re "III"))) (re.++ (re.+ (re.* (str.to.re "J"))) (re.* (re.* (str.to.re "KKK")))))))))))))))))))))))))))))))))
(check-sat)