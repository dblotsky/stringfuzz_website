(set-logic QF_S)
(declare-fun var0 () String)
(assert (str.in.re var0 (re.++ (re.union (re.* (str.to.re "0")) (re.* (str.to.re "1"))) (re.++ (re.+ (re.* (str.to.re "222"))) (re.++ (re.+ (re.* (str.to.re "333"))) (re.++ (re.+ (re.* (str.to.re "4"))) (re.++ (re.+ (re.+ (str.to.re "5"))) (re.++ (re.* (re.+ (str.to.re "66"))) (re.++ (re.union (re.union (str.to.re "777") (str.to.re "8")) (re.union (str.to.re "9") (str.to.re "a"))) (re.++ (re.+ (re.+ (str.to.re "bb"))) (re.++ (re.+ (re.union (str.to.re "c") (str.to.re "ddd"))) (re.++ (re.union (re.+ (str.to.re "ee")) (re.+ (str.to.re "ff"))) (re.++ (re.* (re.+ (str.to.re "gg"))) (re.++ (re.+ (re.* (str.to.re "h"))) (re.++ (re.+ (re.union (str.to.re "ii") (str.to.re "j"))) (re.++ (re.* (re.* (str.to.re "kk"))) (re.++ (re.union (re.* (str.to.re "lll")) (re.* (str.to.re "mm"))) (re.++ (re.* (re.+ (str.to.re "n"))) (re.++ (re.union (re.* (str.to.re "oo")) (re.* (str.to.re "p"))) (re.++ (re.* (re.* (str.to.re "q"))) (re.++ (re.* (re.union (str.to.re "rrr") (str.to.re "ss"))) (re.++ (re.* (re.+ (str.to.re "ttt"))) (re.++ (re.union (re.+ (str.to.re "uu")) (re.+ (str.to.re "vvv"))) (re.++ (re.union (re.* (str.to.re "w")) (re.* (str.to.re "x"))) (re.++ (re.+ (re.union (str.to.re "y") (str.to.re "z"))) (re.++ (re.union (re.union (str.to.re "A") (str.to.re "BB")) (re.union (str.to.re "CC") (str.to.re "D"))) (re.++ (re.union (re.+ (str.to.re "E")) (re.+ (str.to.re "FF"))) (re.++ (re.+ (re.* (str.to.re "G"))) (re.++ (re.+ (re.+ (str.to.re "HH"))) (re.++ (re.* (re.* (str.to.re "II"))) (re.++ (re.+ (re.union (str.to.re "JJJ") (str.to.re "KK"))) (re.++ (re.+ (re.* (str.to.re "LL"))) (re.++ (re.union (re.+ (str.to.re "MMM")) (re.+ (str.to.re "NNN"))) (re.++ (re.+ (re.union (str.to.re "OO") (str.to.re "PP"))) (re.union (re.+ (str.to.re "QQQ")) (re.+ (str.to.re "RR")))))))))))))))))))))))))))))))))))))
(check-sat)